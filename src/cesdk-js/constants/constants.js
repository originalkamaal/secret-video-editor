export var renderPipelineStages = [
  "prepare",
  "read",
  "update",
  "preRender",
  "render",
  "postRender",
];
export var interactionStates = [
  "animate",
  "whileInView",
  "whileFocus",
  "whileHover",
  "whileTap",
  "whileDrag",
  "exit",
];
export var allAnimationStates = ["initial", ...interactionStates];
export var unknownBool1 = false;
export var unknownBool2 = false;export const BUTTON_STYLES = {
  block: "UBQ_Button-module__block--114Ku",
  spinner: "UBQ_Button-module__spinner--zR3f0",
  centered: "UBQ_Button-module__centered--ACV-D",
  link: "UBQ_Button-module__link--FQkzU",
  "ubq-variant_regular": "UBQ_Button-module__ubq-variant_regular--sQi7-",
  "ubq-variant_plain": "UBQ_Button-module__ubq-variant_plain--U4yyh",
  "ubq-color_accent": "UBQ_Button-module__ubq-color_accent--3eb-s",
  "ubq-color_danger": "UBQ_Button-module__ubq-color_danger--M-P3c",
  "ubq-state_active": "UBQ_Button-module__ubq-state_active--YmzK9",
  "ubq-state_active-style_outline": "UBQ_Button-module__ubq-state_active-style_outline--CUP3o",
  "ubq-state_active-style_pill": "UBQ_Button-module__ubq-state_active-style_pill--4PyTA",
  "ubq-state_selected": "UBQ_Button-module__ubq-state_selected--1-aZk",
  "ubq-size_large": "UBQ_Button-module__ubq-size_large--J2y5o",
  spin: "UBQ_Button-module__spin--dPx1E",
};
export var ELEMENT_TYPES = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "switch",
  "symbol",
  "svg",
  "text",
  "tspan",
  "use",
  "view",
];
export var SOME_CONSTANTS_KEYS = new Set([
  "animate",
  "exit",
  "variants",
  "initial",
  "style",
  "values",
  "variants",
  "transition",
  "transformTemplate",
  "custom",
  "inherit",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "_dragX",
  "_dragY",
  "onHoverStart",
  "onHoverEnd",
  "onViewportEnter",
  "onViewportLeave",
  "globalTapTarget",
  "ignoreStrict",
  "viewport",
]);
export var animationEventProps = {
  animation: [
    "animate",
    "variants",
    "whileHover",
    "whileTap",
    "exit",
    "whileInView",
    "whileFocus",
    "whileDrag",
  ],
  exit: ["exit"],
  drag: ["drag", "dragControls"],
  focus: ["whileFocus"],
  hover: ["whileHover", "onHoverStart", "onHoverEnd"],
  tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
  pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
  inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
  layout: ["layout", "layoutId"],
};
export var dimensionalProperties = [
  "transformPerspective",
  "x",
  "y",
  "z",
  "translateX",
  "translateY",
  "translateZ",
  "scale",
  "scaleX",
  "scaleY",
  "rotate",
  "rotateX",
  "rotateY",
  "rotateZ",
  "skew",
  "skewX",
  "skewY",
];

